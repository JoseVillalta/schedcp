{
  "scheduler": {
    "name": "scx_nest",
    "production_ready": true,
    "description": "A frequency-optimized scheduler that keeps tasks on warm cores to maintain high CPU frequencies. Based on the Inria-Paris Nest paper, it divides cores into primary and reserve nests, concentrating work on a subset of cores to maximize boost frequencies. Best suited for single CCX/socket systems with low to moderate CPU utilization.",
    "use_cases": [
      "low_cpu_utilization",
      "frequency_sensitive",
      "latency_sensitive",
      "power_efficiency"
    ],
    "algorithm": "warm_core_clustering",
    "characteristics": "warm core prioritization, frequency optimization, single ccx limitation, cache locality awareness, dynamic nest sizing, hyperthreading awareness",
    "tuning_parameters": {
      "delay_us": {
        "type": "integer",
        "description": "Delay before removing idle core from primary nest",
        "default": 2000,
        "range": [
          100,
          100000
        ]
      },
      "r_max": {
        "type": "integer",
        "description": "Maximum number of cores in reserve nest",
        "default": 5,
        "range": [
          1,
          64
        ]
      },
      "iters": {
        "type": "integer",
        "description": "Placement failures before aggressive expansion",
        "default": 2,
        "range": [
          0,
          10
        ]
      },
      "slice_us": {
        "type": "integer",
        "description": "Override slice duration",
        "default": 20000
      },
      "prefer_idle": {
        "type": "boolean",
        "description": "Prefer fully idle cores over siblings",
        "default": false
      }
    },
    "limitations": "Limited to single CCX, not good for high CPU utilization",
    "performance_profile": "optimized for frequency boost and power efficiency"
  }
}