{
  "configuration": {
    "short_tasks": 39,
    "long_tasks": 1,
    "total_tasks": 40
  },
  "test_cases": [
    {
      "id": "pigz_compression",
      "name": "Pigz Directory Compression",
      "description": "Parallel compression of mixed-size files with severe load imbalance",
      "category": "file_processing",
      "small_setup": [
        "mkdir -p test_data",
        "seq 1 3000000 > test_data/short_file.dat"
      ],
      "large_setup": [
        "mkdir -p test_data",
        "seq 1 100000000 > test_data/large_file.dat"
      ],
      "small_commands": [
        "pigz -9 test_data/short_file.dat"
      ],
      "large_commands": [
        "pigz -9 test_data/large_file.dat"
      ],
      "cleanup_commands": [
        "rm -rf test_data/",
        "rm -f *.gz"
      ],
      "expected_improvement": 0.33,
      "dependencies": ["pigz"]
    },
    {
      "id": "ffmpeg_transcode",
      "name": "FFmpeg Split Transcode",
      "description": "Video transcoding with one large file dominating processing time",
      "category": "media_processing",
      "small_setup": [
        "mkdir -p clips out",
        "ffmpeg -f lavfi -i testsrc=duration=3:size=320x240:rate=30 -loglevel quiet clips/short.mp4"
      ],
      "large_setup": [
        "mkdir -p clips out",
        "ffmpeg -f lavfi -i testsrc=duration=15:size=640x480:rate=30 -loglevel quiet clips/long.mp4"
      ],
      "small_commands": [
        "ffmpeg -loglevel quiet -i clips/short.mp4 -vf scale=640:-1 -c:v libx264 -preset veryfast out/short_out.mp4"
      ],
      "large_commands": [
        "ffmpeg -loglevel quiet -i clips/long.mp4 -vf scale=640:-1 -c:v libx264 -preset veryfast out/long_out.mp4"
      ],
      "cleanup_commands": [
        "rm -rf clips/ out/"
      ],
      "expected_improvement": 0.33,
      "dependencies": ["ffmpeg"]
    },
    {
      "id": "ctest_suite",
      "name": "CTest Suite with Slow Integration Test",
      "description": "Test suite with fast unit tests and one slow integration test",
      "category": "software_testing",
      "small_setup": [
        "gcc -O2 assets/short.c -lm -o assets/short"
      ],
      "large_setup": [
        "gcc -O2 assets/long.c -lm -o assets/long"
      ],
      "small_commands": [
        "./assets/short"
      ],
      "large_commands": [
        "./assets/long"
      ],
      "cleanup_commands": [
        "rm -f assets/short assets/long"
      ],
      "expected_improvement": 0.33,
      "dependencies": ["gcc"]
    },
    {
      "id": "git_compression",
      "name": "Git Incremental Compression",
      "description": "Git garbage collection with mixed object sizes",
      "category": "version_control",
      "small_setup": [
        "mkdir -p test_repo && cd test_repo && git init",
        "cd test_repo && git config user.name 'Test User' && git config user.email 'test@example.com'",
        "cd test_repo && echo 'small change' > small_file.txt && git add small_file.txt && git commit -m 'small commit' --quiet"
      ],
      "large_setup": [
        "mkdir -p test_repo && cd test_repo && git init",
        "cd test_repo && git config user.name 'Test User' && git config user.email 'test@example.com'",
        "cd test_repo && dd if=/dev/urandom of=large.bin bs=1M count=5 2>/dev/null && git add large.bin && git commit -m 'add large binary' --quiet"
      ],
      "small_commands": [
        "cd test_repo && git log --oneline -n 5 > /tmp/short_log.txt && sha256sum /tmp/short_log.txt"
      ],
      "large_commands": [
        "cd test_repo && echo \"Processing large repository\" && git repack -a -d -f --depth=10 --window=50"
      ],
      "cleanup_commands": [
        "rm -rf test_repo/"
      ],
      "expected_improvement": 0.30,
      "dependencies": ["git"]
    },
    {
      "id": "file_checksum",
      "name": "Parallel File System Operations",
      "description": "Checksum operations with one large file blocking completion",
      "category": "file_processing",
      "small_setup": [
        "mkdir -p large-dir",
        "dd if=/dev/urandom of=large-dir/short_file.dat bs=1M count=200 2>/dev/null"
      ],
      "large_setup": [
        "mkdir -p large-dir",
        "dd if=/dev/urandom of=large-dir/long_file.dat bs=1M count=1000 2>/dev/null"
      ],
      "small_commands": [
        "sha256sum large-dir/short_file.dat"
      ],
      "large_commands": [
        "sha256sum large-dir/long_file.dat"
      ],
      "cleanup_commands": [
        "rm -rf large-dir/",
        "rm -f checksums.txt"
      ],
      "expected_improvement": 0.33,
      "dependencies": ["sha256sum"]
    },
    {
      "id": "spark_shuffle",
      "name": "Spark Local Shuffle with Skew",
      "description": "Analytics with skewed data distribution (hot key problem)",
      "category": "data_processing",
      "small_setup": [
        "chmod +x assets/spark_skew_prepare.py assets/spark_skew_test.py",
        "python3 assets/spark_skew_prepare.py --regular-keys 5000 --hot-keys 10000 --output spark_small.csv"
      ],
      "large_setup": [
        "chmod +x assets/spark_skew_prepare.py assets/spark_skew_test.py",
        "python3 assets/spark_skew_prepare.py --regular-keys 5000 --hot-keys 50000 --output spark_large.csv"
      ],
      "small_commands": [
        "python3 assets/spark_skew_test.py spark_small.csv"
      ],
      "large_commands": [
        "python3 assets/spark_skew_test.py spark_large.csv"
      ],
      "cleanup_commands": [
        "rm -f spark_small.csv spark_large.csv"
      ],
      "expected_improvement": 0.33,
      "dependencies": ["python3"]
    },
    {
      "id": "log_processing",
      "name": "Log Processing with Skewed Chunks",
      "description": "Processing log files with different sizes and compression",
      "category": "data_processing",
      "small_setup": [
        "mkdir -p log_chunks",
        "seq 1 2000000 | awk '{print strftime(\"%Y-%m-%d %H:%M:%S\"), \"[INFO]\", \"Request from\", \"192.168.1.\"int(rand()*255), \"processed in\", int(rand()*100), \"ms\"}' > log_chunks/small.log"
      ],
      "large_setup": [
        "mkdir -p log_chunks",
        "seq 1 10000000 | awk '{print strftime(\"%Y-%m-%d %H:%M:%S\"), \"[INFO]\", \"Request from\", \"192.168.1.\"int(rand()*255), \"processed in\", int(rand()*100), \"ms\"}' > log_chunks/large.log"
      ],
      "small_commands": [
        "gzip -c log_chunks/small.log | zcat | grep -E '\\[INFO\\]' | awk '{print $4}' | sort | uniq -c | sort -nr > log_chunks/small_ips.txt"
      ],
      "large_commands": [
        "gzip -c log_chunks/large.log | zcat | grep -E '\\[INFO\\]' | awk '{print $4}' | sort | uniq -c | sort -nr > log_chunks/large_ips.txt"
      ],
      "cleanup_commands": [
        "rm -rf log_chunks/"
      ],
      "expected_improvement": 0.35,
      "dependencies": ["gzip", "grep", "awk", "sort", "uniq"]
    },
    {
      "id": "dask_groupby",
      "name": "Dask-like GroupBy with Power-law Distribution",
      "description": "Customer analytics simulation with skewed group sizes",
      "category": "data_processing",
      "small_setup": [
        "chmod +x assets/dask_groupby_prepare.py assets/dask_groupby_test.py",
        "python3 assets/dask_groupby_prepare.py --regular-size 5000 --hot-size 10000 --output dask_small.csv"
      ],
      "large_setup": [
        "chmod +x assets/dask_groupby_prepare.py assets/dask_groupby_test.py",
        "python3 assets/dask_groupby_prepare.py --regular-size 5000 --hot-size 50000 --output dask_large.csv"
      ],
      "small_commands": [
        "python3 assets/dask_groupby_test.py dask_small.csv"
      ],
      "large_commands": [
        "python3 assets/dask_groupby_test.py dask_large.csv"
      ],
      "cleanup_commands": [
        "rm -f dask_small.csv dask_large.csv",
        "rm -f /tmp/dask_*"
      ],
      "expected_improvement": 0.33,
      "dependencies": ["python3", "awk"]
    },
    {
      "id": "pandas_etl",
      "name": "Pandas ETL with DDoS Spike Simulation",
      "description": "ETL pipeline with sudden spike in data volume",
      "category": "data_processing",
      "small_setup": [
        "chmod +x assets/pandas_etl_prepare.py assets/pandas_etl_test.py",
        "python3 assets/pandas_etl_prepare.py --normal-logs 20000 --error-logs 5000 --output etl_small.gz"
      ],
      "large_setup": [
        "chmod +x assets/pandas_etl_prepare.py assets/pandas_etl_test.py",
        "python3 assets/pandas_etl_prepare.py --normal-logs 20000 --error-logs 25000 --output etl_large.gz"
      ],
      "small_commands": [
        "python3 assets/pandas_etl_test.py etl_small.gz"
      ],
      "large_commands": [
        "python3 assets/pandas_etl_test.py etl_large.gz"
      ],
      "cleanup_commands": [
        "rm -f etl_small.gz etl_large.gz",
        "rm -f /tmp/pandas_*"
      ],
      "expected_improvement": 0.33,
      "dependencies": ["python3", "gzip", "awk"]
    },
    {
      "id": "flink_join",
      "name": "Flink-like Join with Popular Items",
      "description": "Retail analytics simulation with hot products",
      "category": "data_processing",
      "small_setup": [
        "chmod +x assets/flink_join_prepare.py assets/flink_join_test.py",
        "python3 assets/flink_join_prepare.py --regular-transactions 5000 --hot-transactions 10000 --output flink_small.csv"
      ],
      "large_setup": [
        "chmod +x assets/flink_join_prepare.py assets/flink_join_test.py",
        "python3 assets/flink_join_prepare.py --regular-transactions 5000 --hot-transactions 50000 --output flink_large.csv"
      ],
      "small_commands": [
        "python3 assets/flink_join_test.py flink_small.csv"
      ],
      "large_commands": [
        "python3 assets/flink_join_test.py flink_large.csv"
      ],
      "cleanup_commands": [
        "rm -f flink_small.csv flink_large.csv",
        "rm -f /tmp/flink_*"
      ],
      "expected_improvement": 0.33,
      "dependencies": ["python3", "awk"]
    }
  ],
  "metadata": {
    "version": "2.1",
    "description": "Long-tail workload test cases with system-level parallel commands",
    "target_platform": "Linux",
    "cpu_count": 4,
    "total_test_cases": 10,
    "average_expected_improvement": 0.32
  }
}