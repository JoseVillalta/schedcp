{
  "profiles": {
    "c7bcf45e-10d1-41df-8953-fda3fadcd9b7": {
      "id": "c7bcf45e-10d1-41df-8953-fda3fadcd9b7",
      "description": "Linux kernel build with -j 172 parallel jobs. This is a highly parallel, CPU-intensive workload characterized by massive thread creation/destruction, mixed compilation task sizes (preprocessing to large compilation units), high memory usage from multiple compiler instances, and I/O bursts for reading source files and writing object files. The workload benefits from good cache locality, NUMA awareness, and efficient load balancing across many cores.",
      "created_at": 1754067718,
      "updated_at": 1754067718
    }
  },
  "history": [
    {
      "id": "7d273616-4fa9-4c33-b6ea-7807f013d373",
      "workload_id": "c7bcf45e-10d1-41df-8953-fda3fadcd9b7",
      "execution_id": "sched_f30ec77b",
      "scheduler_name": "scx_rusty",
      "args": [
        "--slice-us-underutil",
        "10000",
        "--slice-us-overutil",
        "5000",
        "--greedy-threshold",
        "2",
        "--direct-greedy-under",
        "85.0"
      ],
      "result_description": "Linux kernel build completed successfully with scx_rusty scheduler. Total build time: 3 minutes 54.612 seconds (real time). The build used 172 parallel jobs on an 86-core system with 2 NUMA nodes. The scheduler was configured with reduced time slices (10ms underutil, 5ms overutil) for better responsiveness, greedy threshold of 2 for aggressive load balancing, and direct dispatch at 85% utilization. The build process showed good CPU utilization across all cores with effective load balancing between the two NUMA domains.",
      "created_at": 1754067827
    },
    {
      "id": "2bd68aa1-03ad-4c30-bc97-e32db672d168",
      "workload_id": "c7bcf45e-10d1-41df-8953-fda3fadcd9b7",
      "execution_id": "sched_cb4ec90d",
      "scheduler_name": "scx_layered",
      "args": [
        "--run-example"
      ],
      "result_description": "Linux kernel build completed with scx_layered scheduler. Total build time: 3 minutes 48.341 seconds (real time). The scx_layered scheduler was run with --run-example configuration which provides a balanced layer setup for general workloads. The build showed slightly improved performance compared to scx_rusty, with a 6.271 second (2.7%) improvement. The layered approach appears to handle the highly parallel compilation workload effectively.",
      "created_at": 1754067925
    },
    {
      "id": "a4feb5dd-22b1-4ba7-8eee-cc711e8c11a9",
      "workload_id": "c7bcf45e-10d1-41df-8953-fda3fadcd9b7",
      "execution_id": "sched_12d7b939",
      "scheduler_name": "scx_bpfland",
      "args": [
        "--slice-us",
        "10000",
        "--slice-us-min",
        "1000",
        "--primary-domain",
        "all"
      ],
      "result_description": "Linux kernel build completed with scx_bpfland scheduler. Total build time: 3 minutes 51.823 seconds (real time). The scx_bpfland scheduler was configured with 10ms time slices, 1ms minimum slice, and all CPUs in primary domain. This scheduler prioritizes interactive workloads but still performed well on the CPU-intensive kernel build, showing only a 2.4% performance difference compared to the best result (scx_layered). The interactive task detection didn't significantly impact the build performance.",
      "created_at": 1754067993
    }
  ]
}